{
  "_exportDate": "2019-09-10T19:07:25.827Z",
  "_type": "flow",
  "applicationId": "5c40ecbac853d20008cd96ba",
  "customNodeVersions": [
  ],
  "customNodes": [
  ],
  "description": "",
  "enabled": true,
  "flowClass": "cloud",
  "globals": [
  ],
  "id": "5d27845e16770d0008c0132d",
  "name": "Solution Workflow: Encoding/Decoding",
  "nodes": [
    {
      "config": {
        "cases": [
          {
            "caseLabel": "",
            "caseTemplate": "decode-json",
            "dontBreak": false
          },
          {
            "caseLabel": "",
            "caseTemplate": "decode-base64",
            "dontBreak": false
          },
          {
            "caseLabel": "",
            "caseTemplate": "encode-base64",
            "dontBreak": false
          },
          {
            "caseLabel": "",
            "caseTemplate": "decode-hex",
            "dontBreak": false
          },
          {
            "caseLabel": "",
            "caseTemplate": "decode-xml",
            "dontBreak": false
          },
          {
            "caseLabel": "",
            "caseTemplate": "encode-jwt",
            "dontBreak": false
          }
        ],
        "switchTemplate": "{{ data.query.id }}"
      },
      "id": "uKUBDqQ5hU",
      "meta": {
        "category": "logic",
        "description": "",
        "id": "gZuPKpPt0k",
        "label": "Switch",
        "name": "switch",
        "x": 680,
        "y": 300
      },
      "outputIds": [
        [
        ],
        [
          "AJEavz3jPf"
        ],
        [
          "cW0P-YtFbd"
        ],
        [
          "cRBeMVkm7D"
        ],
        [
          "q7uVM1Ucqv"
        ],
        [
          "9kVOhDNBnU"
        ],
        [
          "1sf1V5nqrT"
        ]
      ],
      "type": "SwitchNode"
    },
    {
      "config": {
        "message": "",
        "property": ""
      },
      "id": "WfNm4e8251",
      "meta": {
        "category": "output",
        "description": "",
        "id": "CwvDon2R3w",
        "label": "Debug",
        "name": "debug",
        "x": 960,
        "y": 780
      },
      "outputIds": [
      ],
      "type": "DebugNode"
    },
    {
      "config": {
        "message": "",
        "property": ""
      },
      "id": "mHX3g5Iqa7",
      "meta": {
        "category": "output",
        "description": "",
        "id": "CwvDon2R3w",
        "label": "Debug",
        "name": "debug",
        "x": 860,
        "y": 1080
      },
      "outputIds": [
      ],
      "type": "DebugNode"
    },
    {
      "config": {
        "message": "",
        "property": ""
      },
      "id": "I-KZF56evx",
      "meta": {
        "category": "output",
        "description": "",
        "id": "CwvDon2R3w",
        "label": "Debug",
        "name": "debug",
        "x": 660,
        "y": 740
      },
      "outputIds": [
      ],
      "type": "DebugNode"
    },
    {
      "config": {
        "message": "",
        "property": ""
      },
      "id": "JAK_yd7C8b",
      "meta": {
        "category": "output",
        "description": "",
        "id": "CwvDon2R3w",
        "label": "Debug",
        "name": "debug",
        "x": 460,
        "y": 740
      },
      "outputIds": [
      ],
      "type": "DebugNode"
    },
    {
      "config": {
        "message": "",
        "property": ""
      },
      "id": "-NpsiF0l70",
      "meta": {
        "category": "output",
        "description": "",
        "id": "CwvDon2R3w",
        "label": "Debug",
        "name": "debug",
        "x": 280,
        "y": 680
      },
      "outputIds": [
      ],
      "type": "DebugNode"
    },
    {
      "config": {
        "bodyTemplate": "{ \"result\" : {{ working.result}} }",
        "bodyTemplateType": "string",
        "headerInfo": [
        ],
        "replyIdPath": "",
        "responseCodeTemplate": ""
      },
      "id": "QSBNCFGo8l",
      "meta": {
        "category": "output",
        "description": "",
        "id": "tvktYfBZRp",
        "label": "Webhook Reply",
        "name": "webhook-reply",
        "x": 280,
        "y": 600
      },
      "outputIds": [
        [
          "-NpsiF0l70"
        ]
      ],
      "type": "WebhookReplyNode"
    },
    {
      "config": {
        "bodyTemplate": "{ \"result\" : \"{{decodeBase64 data.body.value}}\" }",
        "bodyTemplateType": "string",
        "headerInfo": [
        ],
        "replyIdPath": "",
        "responseCodeTemplate": ""
      },
      "id": "cW0P-YtFbd",
      "meta": {
        "category": "output",
        "description": "",
        "id": "_0oFMM-7MU",
        "label": "Webhook Reply",
        "name": "webhook-reply",
        "x": 460,
        "y": 660
      },
      "outputIds": [
        [
          "JAK_yd7C8b"
        ]
      ],
      "type": "WebhookReplyNode"
    },
    {
      "config": {
        "bodyTemplate": "{ \"result\" : \"{{{encodeBase64 data.body.value}}}\" }",
        "bodyTemplateType": "string",
        "headerInfo": [
        ],
        "replyIdPath": "",
        "responseCodeTemplate": ""
      },
      "id": "cRBeMVkm7D",
      "meta": {
        "category": "output",
        "description": "",
        "id": "zkUxVxIW8e",
        "label": "Webhook Reply",
        "name": "webhook-reply",
        "x": 660,
        "y": 660
      },
      "outputIds": [
        [
          "I-KZF56evx"
        ]
      ],
      "type": "WebhookReplyNode"
    },
    {
      "config": {
        "bodyTemplate": "{ \"result\": {{jsonEncode working}} }",
        "bodyTemplateType": "string",
        "headerInfo": [
        ],
        "replyIdPath": "",
        "responseCodeTemplate": ""
      },
      "id": "b-Jqg4J0jP",
      "meta": {
        "category": "output",
        "description": "",
        "id": "gz7Ipy3clw",
        "label": "Webhook Reply",
        "name": "webhook-reply",
        "x": 860,
        "y": 1000
      },
      "outputIds": [
        [
          "mHX3g5Iqa7"
        ]
      ],
      "type": "WebhookReplyNode"
    },
    {
      "config": {
        "destination": "working",
        "source": "data.body.raw"
      },
      "id": "AJEavz3jPf",
      "meta": {
        "category": "logic",
        "description": "",
        "id": "3SJFvLdyUG",
        "label": "JSON: Decode",
        "name": "json-decode",
        "x": 280,
        "y": 440
      },
      "outputIds": [
        [
          "K6LA4JQiqD"
        ]
      ],
      "type": "JsonDecodeNode"
    },
    {
      "config": {
        "statements": [
          {
            "expression": "{{working.num1}} + {{working.num2}}",
            "resultPath": "working.result"
          }
        ]
      },
      "id": "K6LA4JQiqD",
      "meta": {
        "category": "logic",
        "description": "",
        "id": "HT-YvYzLCM",
        "label": "Math",
        "name": "math",
        "x": 280,
        "y": 520
      },
      "outputIds": [
        [
          "QSBNCFGo8l"
        ]
      ],
      "type": "MathNode"
    },
    {
      "config": {
        "script": "/*\n * payload variable contains current payload.\n * e.g. payload.data.myValue\n *\n * You can modify the current payload variable\n * or return an object that will entirely\n * replace the payload.\n *\n * console.log() will write a message to\n * the Debug tab.\n *\n * The Buffer object is available for\n * complex parsing: https://nodejs.org/dist/latest-v6.x/docs/api/buffer.html\n*/\nconst buf = Buffer.from(payload.data.body.raw, \"hex\")\n\npayload.working = {\n  temperature: buf.readUInt32LE(0, 4),\n  voltage: buf.readUInt32LE(4, 4)\n}"
      },
      "id": "q7uVM1Ucqv",
      "meta": {
        "category": "logic",
        "description": "",
        "id": "s-ElcTpHVo",
        "label": "Function",
        "name": "function",
        "x": 860,
        "y": 920
      },
      "outputIds": [
        [
          "b-Jqg4J0jP"
        ]
      ],
      "type": "RawFunctionNode"
    },
    {
      "config": {
        "algorithmTemplate": "HS256",
        "dataTemplate": "data.body.data",
        "dataTemplateType": "path",
        "destinationPath": "working.token",
        "expiresIn": 86400,
        "issuerTemplate": "",
        "secretTemplate": "{{data.body.secret}}"
      },
      "id": "1sf1V5nqrT",
      "meta": {
        "category": "logic",
        "description": "",
        "id": "1sf1V5nqrT",
        "isExpRequired": true,
        "label": "JWT: Create",
        "name": "jwt-create",
        "timeUnit": "Days",
        "x": 1220,
        "y": 520
      },
      "outputIds": [
        [
          "pCAci1nTca"
        ]
      ],
      "type": "JWTCreateNode"
    },
    {
      "config": {
        "message": "",
        "property": ""
      },
      "id": "xH_T_lW6rn",
      "meta": {
        "category": "output",
        "description": "",
        "id": "CwvDon2R3w",
        "label": "Debug",
        "name": "debug",
        "x": 1220,
        "y": 720
      },
      "outputIds": [
      ],
      "type": "DebugNode"
    },
    {
      "config": {
        "bodyTemplate": "{ \"token\" : \"{{working.token}}\" }",
        "bodyTemplateType": "string",
        "headerInfo": [
        ],
        "replyIdPath": "",
        "responseCodeTemplate": ""
      },
      "id": "pCAci1nTca",
      "meta": {
        "category": "output",
        "description": "",
        "id": "E8vPqVuZkK",
        "label": "Webhook Reply",
        "name": "webhook-reply",
        "x": 1220,
        "y": 640
      },
      "outputIds": [
        [
          "xH_T_lW6rn"
        ]
      ],
      "type": "WebhookReplyNode"
    },
    {
      "config": {
        "documentPath": "data.body",
        "resultFormatTemplate": "json",
        "resultPath": "working.data",
        "selectorTemplate": ""
      },
      "id": "9kVOhDNBnU",
      "meta": {
        "category": "logic",
        "description": "",
        "id": "CYH92KjZNs",
        "label": "HTML/XML Parser",
        "name": "html-parser",
        "x": 960,
        "y": 480
      },
      "outputIds": [
        [
          "iZa2QMy3LU"
        ]
      ],
      "type": "HtmlParserNode"
    },
    {
      "config": {
        "rules": [
          {
            "destination": "working.result.temperature",
            "type": "set",
            "valueTemplate": "{{#gt working.data.[0].children.[0].children.[0].children.[0].children.[0].value working.data.[0].children.[0].children.[0].children.[1].children.[0].value}}true{{else}}false{{/gt}}",
            "valueTemplateType": "json"
          },
          {
            "destination": "working.result.voltage",
            "type": "set",
            "valueTemplate": "{{#gt working.data.[0].children.[0].children.[1].children.[0].children.[0].value  working.data.[0].children.[0].children.[1].children.[1].children.[0].value}}true{{else}}false{{/gt}}",
            "valueTemplateType": "json"
          },
          {
            "destination": "working.result.current",
            "type": "set",
            "valueTemplate": "{{#gt working.data.[0].children.[0].children.[2].children.[0].children.[0].value  working.data.[0].children.[0].children.[2].children.[1].children.[0].value}}true{{else}}false{{/gt}}",
            "valueTemplateType": "json"
          }
        ]
      },
      "id": "iZa2QMy3LU",
      "meta": {
        "category": "logic",
        "description": "",
        "id": "BLo0dztu2a",
        "label": "Mutate",
        "name": "mutate",
        "x": 960,
        "y": 580
      },
      "outputIds": [
        [
          "d450n-3slJ"
        ]
      ],
      "type": "MutateNode"
    },
    {
      "config": {
        "bodyTemplate": "{ \"result\": {{jsonEncode working.result}} }",
        "bodyTemplateType": "string",
        "headerInfo": [
        ],
        "replyIdPath": "",
        "responseCodeTemplate": ""
      },
      "id": "d450n-3slJ",
      "meta": {
        "category": "output",
        "description": "",
        "id": "E8vPqVuZkK",
        "label": "Webhook Reply",
        "name": "webhook-reply",
        "x": 960,
        "y": 680
      },
      "outputIds": [
        [
          "WfNm4e8251"
        ]
      ],
      "type": "WebhookReplyNode"
    },
    {
      "config": {
      },
      "id": "WDjpuxJczA",
      "meta": {
        "annotationText": "The Switch Node determines which test to run depending on the value of {{data.body.id}}",
        "category": "annotation",
        "height": 100,
        "label": "Note",
        "name": "note",
        "width": 260,
        "x": 360,
        "y": 220
      },
      "outputIds": [
      ],
      "type": "AnnotationNode"
    },
    {
      "config": {
      },
      "id": "S6k86QikdZ",
      "meta": {
        "annotationText": "Note the inline helpers for encoding and decoding base64 in the reply body.",
        "category": "annotation",
        "height": 100,
        "label": "Note",
        "name": "note",
        "width": 260,
        "x": 480,
        "y": 820
      },
      "outputIds": [
      ],
      "type": "AnnotationNode"
    },
    {
      "config": {
      },
      "id": "wD_XRAxqLZ",
      "meta": {
        "annotationText": "The test makes use of the Buffer object in the Function Node.",
        "category": "annotation",
        "height": 100,
        "label": "Note",
        "name": "note",
        "width": 260,
        "x": 820,
        "y": 1160
      },
      "outputIds": [
      ],
      "type": "AnnotationNode"
    }
  ],
  "triggers": [
    {
      "config": {
      },
      "key": "5d278522bb63290008c0f5e3",
      "meta": {
        "category": "trigger",
        "description": "",
        "id": "V~j7MvcjUN",
        "label": "Encoding/Decoding",
        "name": "webhook",
        "uiId": "QQMjnipUzI",
        "x": 680,
        "y": 140
      },
      "outputIds": [
        [
          "uKUBDqQ5hU"
        ]
      ],
      "type": "webhook"
    }
  ]
}